{"version":3,"sources":["webpack:///./src/templates/post-list.js"],"names":["listQuery","PostList","props","posts","data","allMarkdownRemark","edges","labels","site","siteMetadata","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags","rel","style","textDecoration"],"mappings":"sRA8FaA,EAAS,aAyCPC,UA7HE,SAAAC,GACf,IAAMC,EAAQD,EAAME,KAAKC,kBAAkBC,MACrCC,EAASL,EAAME,KAAKI,KAAKC,aAAaF,OAFpB,EAGUL,EAAMQ,YAAhCC,EAHgB,EAGhBA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IALS,EAGHG,SAGfC,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAuBnC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,MAAM,OACNC,SAAU,CAAC,SAAD,2DASZ,yBAAKC,UAAU,cACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,kBACZjB,EAAMkB,KAAI,SAAAC,GACT,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACE,yBAAKG,IAAKJ,EAAKE,KAAKG,GAAIP,UAAU,kBAChC,kBAAC,OAAD,CAAMQ,GAAIN,EAAKE,KAAKK,OAAOC,KAAMV,UAAU,aACzC,wBAAIA,UAAU,SAASE,EAAKE,KAAKC,YAAYP,QAE/C,2BAAOE,UAAU,qBACf,4CAAkBE,EAAKE,KAAKC,YAAYM,OAE1C,uBAAGX,UAAU,iBAAiBE,EAAKE,KAAKQ,SACxC,kBAAC,OAAD,CAAMJ,GAAIN,EAAKE,KAAKK,OAAOC,KAAMV,UAAU,gBACzC,2BAAOA,UAAU,uBAAjB,gBAEF,yBAAKA,UAAU,WArDT,SAAAG,GAClB,IAAMU,EAAW,GAiBjB,OAhBAV,EAAKW,SAAQ,SAACC,EAAKC,GACjB7B,EAAO2B,SAAQ,SAAAG,GACTF,IAAQE,EAAMF,KAChBF,EAASK,KACP,kBAAC,IAAD,CACEZ,IAAKU,EACLD,IAAKE,EAAMF,IACXI,KAAMF,EAAME,KACZC,KAAMH,EAAMG,KACZC,KAAMJ,EAAMI,KACZC,MAAOL,EAAMK,eAMhBT,EAmC+BU,CAAYpB,QAI5C,yBAAKH,UAAU,qBACXR,GACA,kBAAC,OAAD,CAAMgB,GAAIb,EAAU6B,IAAI,OAAOC,MAAO,CAAEC,eAAe,SACrD,0BAAM1B,UAAU,aAAhB,iBAGFP,GACA,kBAAC,OAAD,CAAMe,GAAIX,EAAU2B,IAAI,OAAOC,MAAO,CAAEC,eAAe,SACrD,0BAAM1B,UAAU,kBAAhB","file":"component---src-templates-post-list-js-2dc7bf05461aac961a89.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../pages/index.css\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Sidebar from \"../components/sidebar/Sidebar\";\nimport TechTag from \"../components/tags/TechTag\";\n\nconst PostList = props => {\n  const posts = props.data.allMarkdownRemark.edges;\n  const labels = props.data.site.siteMetadata.labels;\n  const { currentPage, numPages } = props.pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString();\n  const nextPage = (currentPage + 1).toString();\n\n  const getTechTags = tags => {\n    const techTags = [];\n    tags.forEach((tag, i) => {\n      labels.forEach(label => {\n        if (tag === label.tag) {\n          techTags.push(\n            <TechTag\n              key={i}\n              tag={label.tag}\n              tech={label.tech}\n              name={label.name}\n              size={label.size}\n              color={label.color}\n            />\n          );\n        }\n      });\n    });\n    return techTags;\n  };\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Home\"\n        keywords={[\n          `gatsby`,\n          `javascript`,\n          `react`,\n          `web development`,\n          `blog`,\n          `graphql`\n        ]}\n      />\n      <div className=\"index-main\">\n        <div className=\"sidebar px-4 py-2\">\n          <Sidebar />\n        </div>\n        <div className=\"post-list-main\">\n          {posts.map(post => {\n            const tags = post.node.frontmatter.tags;\n            return (\n              <div key={post.node.id} className=\"container mt-5\">\n                <Link to={post.node.fields.slug} className=\"text-dark\">\n                  <h2 className=\"title\">{post.node.frontmatter.title}</h2>\n                </Link>\n                <small className=\"d-block text-info\">\n                  <i>Được đăng vào {post.node.frontmatter.date}</i>\n                </small>\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                <Link to={post.node.fields.slug} className=\"text-primary\">\n                  <small className=\"d-inline-block ml-3\"> Đọc cả bài</small>\n                </Link>\n                <div className=\"d-block\">{getTechTags(tags)}</div>\n              </div>\n            );\n          })}\n          <div className=\"text-center mt-4\">\n            {!isFirst && (\n              <Link to={prevPage} rel=\"prev\" style={{ textDecoration: `none` }}>\n                <span className=\"text-dark\">← Trang sau</span>\n              </Link>\n            )}\n            {!isLast && (\n              <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\n                <span className=\"text-dark ml-5\">Trang tiếp theo →</span>\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const listQuery = graphql`\n  query paginateQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        author\n        labels {\n          tag\n          tech\n          name\n          size\n          color\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: $limit\n      skip: $skip\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 200)\n          html\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD-MM-YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostList;\n"],"sourceRoot":""}