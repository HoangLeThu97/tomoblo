{"version":3,"sources":["webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/TechTags.js","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./node_modules/react-icons/lib/esm/iconsManifest.js","webpack:///./node_modules/react-icons/lib/esm/iconContext.js","webpack:///./node_modules/react-icons/lib/esm/iconBase.js","webpack:///./src/templates/tag.js","webpack:///./src/components/tags/TechTag.js"],"names":["Bio","author","tagline","className","SocialLinks","contacts","href","facebook","title","size","style","color","github","TechTags","props","labels","posts","tags","map","label","count","forEach","post","node","frontmatter","includes","tag","filter","category","techTags","i","push","TechTag","key","tech","name","getTechTags","Sidebar","query","render","data","site","siteMetadata","allMarkdownRemark","edges","DefaultContext","undefined","attr","IconContext","__assign","Object","assign","t","s","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","GenIcon","IconBase","Tree2Element","tree","child","elem","conf","computedSize","svgProps","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","pageQuery","Tag","pageContext","totalCount","tagHeader","keywords","id","to","fields","slug","date","excerpt","fontSize","role","viewBox","d"],"mappings":"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","file":"component---src-templates-tag-js-f056191f93703076fe64.js","sourcesContent":["import React from \"react\"\nimport \"./sidebar.scss\"\n\nconst Bio = ({ author, tagline }) => {\n\n    return (\n        <div className=\"bio-main w-75\">\n            <h3 className=\"mt-2 author-bio\">{author}</h3>\n            <small className=\"text-muted\">{tagline}</small>\n        </div>\n    )\n}\n\nexport default Bio\n","import React from \"react\"\nimport {\n    FaGithubSquare,\n    FaFacebookSquare\n} from \"react-icons/fa\"\nimport \"./sidebar.scss\"\n\n\nconst SocialLinks = ({ contacts }) => {\n    return (\n        <div className=\"sidebar-social-links\">\n            <a className=\"text-secondary p-2\"\n                href={contacts.facebook}>\n                <span title=\"Facebook\">\n                    <FaFacebookSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n            <a className=\"text-secondary p-2\"\n                href={contacts.github}>\n                <span title=\"GitHub\">\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n        </div>\n    )\n}\n\nexport default SocialLinks\n","import React from \"react\"\nimport TechTag from \"../tags/TechTag\"\n\nconst TechTags = (props) => {\n    const labels = props.labels\n    const posts = props.posts\n\n    const labelCount = labels.map(label => {\n        let count = 0;\n        posts.forEach(post => {\n            if (post.node.frontmatter.tags.includes(label.tag)) {\n                count = count + 1\n            }\n        })\n        return [label.tag, count]\n    })\n\n    const categories = labelCount.filter(label => {\n        return label[1] > 0\n    })\n\n    const tags = categories.map(category => {\n        return category[0]\n    })\n\n\n\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n\n\n    return (\n        <div className=\"tech-topic\">\n            <h4>Tech Topics</h4>\n            <div className=\"tech-item\">\n                {getTechTags(tags)}\n            </div>\n        </div>\n    )\n}\n\n\nexport default TechTags\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Bio from \"./Bio\"\nimport \"./sidebar.scss\"\n\nimport SocialLinks from \"./SocialLinks\"\nimport TechTags from \"./TechTags\"\n\n\nconst Sidebar = () => {\n    return (\n        <StaticQuery\n            query={graphql`\n                query SiteBioQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            tagline\n                            author\n                            contacts {\n                                linkedin\n                                github\n                                stackoverflow\n                                freecodecamp\n                                twitter\n                                facebook\n                            }\n                            labels {\n                                tag\n                                tech\n                                name\n                                size\n                                color\n                            }\n                        }\n                    }\n                    allMarkdownRemark(\n                        limit: 10\n                        sort: { fields: [frontmatter___date], order: DESC }\n                        filter: { frontmatter: { published: { eq: true } } }\n                    ) {\n                        edges {\n                            node {\n                                frontmatter {\n                                    tags\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <>\n                    <div className=\"sidebar-inner border-right\">\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\n                        <div className=\"page-links\">\n                        </div>\n                        <div className=\"tech-tags mt-4\">\n                            <TechTags labels={data.site.siteMetadata.labels} posts={data.allMarkdownRemark.edges} />\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default Sidebar\n","export var IconsManifest = [{\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}];","import * as React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var computedSize = props.size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n\n    var attr = props.attr,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"title\"]);\n\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign({\n        color: props.color || conf.color\n      }, conf.style, props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, graphql } from \"gatsby\";\nimport \"../stylesheets/application.scss\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Sidebar from \"../components/sidebar/Sidebar\";\nimport TechTag from \"../components/tags/TechTag\";\n\nconst Tag = ({ pageContext, data }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const labels = data.site.siteMetadata.labels;\n  const { tag } = pageContext;\n  const { totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n    } tagged with \"${tag}\"`;\n\n  const getTechTags = tags => {\n    const techTags = [];\n    tags.forEach((tag, i) => {\n      labels.forEach(label => {\n        if (tag === label.tag) {\n          techTags.push(\n            <TechTag\n              key={i}\n              tag={label.tag}\n              tech={label.tech}\n              name={label.name}\n              size={label.size}\n              color={label.color}\n            />\n          );\n        }\n      });\n    });\n    return techTags;\n  };\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Home\"\n        keywords={[\n          `gatsby`,\n          `javascript`,\n          `react`,\n          `web development`,\n          `node.js`,\n          `graphql`\n        ]}\n      />\n      <div className=\"index-main\">\n        <div className=\"sidebar\">\n          <Sidebar />\n        </div>\n\n        <div className=\"post-list-main\">\n          <i>\n            <h2 className=\"title\">{tagHeader}</h2>\n          </i>\n          {posts.map(post => {\n            const tags = post.node.frontmatter.tags;\n            return (\n              <div key={post.node.id} className=\"container mt-5\">\n                <Link to={post.node.fields.slug} className=\"text-dark\">\n                  <h2 className=\"title\">{post.node.frontmatter.title}</h2>\n                </Link>\n                <small className=\"d-block text-info\">\n                  Được đăng vào {post.node.frontmatter.date}\n                </small>\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                <div className=\"d-block\">{getTechTags(tags)}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nTag.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired\n            })\n          })\n        }).isRequired\n      )\n    })\n  })\n};\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n        author\n        labels {\n          tag\n          tech\n          name\n          size\n          color\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 200)\n          html\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD-MM-YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Tag;\n","import React from \"react\"\n\nimport \"./tags.scss\"\nimport { Link } from \"gatsby\";\n\nconst TechTag = (props) => {\n    const { tag, tech, name, size, color } = props\n\n    return (\n        <div className=\"d-inline-block p-1\">\n            <Link to={`/tags/${tag}/`}>\n                <button\n                    className=\"tech-tag text-white\">\n                    <p className=\"d-inline\">{tech} </p>\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} style={{ fill: `${color}` }}>\n                        <title>{tech}</title>\n                        <path\n                            d={name} />\n                    </svg></div>\n                </button>\n            </Link>\n\n        </div>\n\n    )\n}\n\nexport default TechTag\n"],"sourceRoot":""}